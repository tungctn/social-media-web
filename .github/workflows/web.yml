name: Deploy Web App to Cloud Server

on:
  # Runs on pushes targeting the default branch
  # path web and api
  push:
    paths:
      - "web/**"
      - "api/**"
      - ".github/workflows/**"
      - "AI/**"
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
  build-AI:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./AI
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Use Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Temporarily disable command-not-found
        run: |
          echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S rm /usr/lib/cnf-update-db
        
      - name: Update and install dependencies
        run: |
          echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S apt-get update
          echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S apt-get install -y libjpeg8-dev zlib1g-dev
        
      - name: Restore command-not-found
        run: |
          echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S ln -s /usr/lib/command-not-found /usr/lib/cnf-update-db
        
        
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

  # Build package
  build:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./web
    needs: build-AI

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm ci
      - run: npm run build
      # - name: Change to web directory
      #   run: |
      #     echo "NODE_PATH=$(pwd)/api" >> $GITHUB_ENV
      #     cd api
      - name: Change to api directory
        run: cd ../api

      - name: Set up Ruby 3.0.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
        working-directory: api
      - name: Set env
        run: |
          touch application.yml
          echo "${{ secrets.PROD_BACKEND }}" > application.yml
        working-directory: api/config
  
  deploy-AI:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Start flask server
        run: echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S systemctl start myflaskapp.service

  # Deployment
  deploy:
    runs-on: self-hosted
    needs: deploy-AI
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Start the application with PM2
        run: |
          npm install pm2 -g
          pm2 restart nextjs-app
      - name: Start puma server
        run: echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S systemctl start puma.service
    

name: Deploy Web App to Cloud Server

on:
  push:
    paths:
      - ".github/**"
    branches: ["cicd_ssh"]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js18
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #     - name: Install dependencies
  #       run: |
  #         cd ./web
  #         npm ci
  #     - name: Test build for frontend
  #       run: |
  #         cd ./web
  #         npm run build
  #     - name: Test unit for frontend
  #       run: |
  #         cd ./web
  #         npm run test:unit
  #     - name: Test integration for frontend
  #       run: |
  #         cd ./web
  #         npm run test:integrate
  #     - name: Test e2e for frontend
  #       run: |
  #         cd ./web
  #         npm ci
  #         touch .env
  #         echo "${{ secrets.PROD_FRONTEND }}" > .env
  #         npm run test:e2e:ci

  # build:
  #   runs-on: self-hosted
  #   # needs: test
  #   # strategy:
  #   #   matrix:
  #   #     component: ["frontend", "backend"]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js18
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #     - name: Set up Ruby 3.0.2
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 3.0.2
  #     - name: Setup for frontend
  #       run: |
  #         cd ./web
  #         npm ci
  #         npm run build
  #     - name: Setup for backend
  #       run: |
  #         cd ./api
  #         gem install bundler
  #         bundle install
  #         touch config/application.yml
  #         echo "${{ secrets.PROD_BACKEND }}" > config/application.yml

  # Deployment
  deploy:
    runs-on: ubuntu-latest
    # needs: build
    strategy:
      fail-fast: false
      matrix:
        servers: ["34.124.196.144"]
    steps:
      - name: Create SSH key
        run: |
          mkdir ~/.ssh/
          touch ~/.ssh/tunggcp
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/tunggcp
          chmod 400 ~/.ssh/tunggcp
          chmod 600 ~/.ssh/tunggcp
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/tunggcp tunggcp@${{ matrix.servers }} 
          

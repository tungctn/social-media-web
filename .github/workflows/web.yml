name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

  # Build package
  build:
    runs-on: self-hosted
    needs: test
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Cache node_modules
      - uses: actions/cache@v3
        with:
          path: web/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
        working-directory: web
      - run: |
          touch .env
          echo "${{ secrets.PROD_ENV_FILE }}" > .env
        working-directory: web
      - run: npm run build
        working-directory: web
      - name: Change to web directory
        run: |
          echo "NODE_PATH=$(pwd)/api" >> $GITHUB_ENV
          cd api
      - name: Set up Ruby 3.0.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
        working-directory: api

  # Deployment frontend
  deploy:
    runs-on: self-hosted
    needs: build
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        with:
          path: web/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Start the application with PM2
        run: pm2 restart nextjs-app
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
      - name: Start puma server
        run: sudo systemctl start puma.service
